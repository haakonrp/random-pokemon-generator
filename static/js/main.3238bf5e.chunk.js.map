{"version":3,"sources":["assets/pokeball.svg","assets/logo.svg","assets/cards/dragon_0.png","assets/cards/dragon_1.png","assets/cards/dragon_2.png","assets/cards/electric_0.png","assets/cards/electric_1.png","assets/cards/electric_2.png","assets/cards/fighting_0.png","assets/cards/fighting_1.png","assets/cards/fighting_2.png","assets/cards/fire_0.png","assets/cards/fire_1.png","assets/cards/fire_2.png","assets/cards/grass_0.png","assets/cards/grass_1.png","assets/cards/grass_2.png","assets/cards/normal_0.png","assets/cards/normal_1.png","assets/cards/normal_2.png","assets/cards/psychic_0.png","assets/cards/psychic_1.png","assets/cards/psychic_2.png","assets/cards/water_0.png","assets/cards/water_1.png","assets/cards/water_2.png","assets/symbols/electric.png","assets/symbols/fighting.png","assets/symbols/fire.png","assets/symbols/grass.png","assets/symbols/normal.png","assets/symbols/psychic.png","assets/symbols/water.png","assets/index.js","components/Pokecard.js","components/Ball.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Dragon0","require","Dragon1","Dragon2","Electric0","Electric1","Electric2","Fighting0","Fighting1","Fighting2","Fire0","Fire1","Fire2","Grass0","Grass1","Grass2","Normal0","Normal1","Normal2","Psychic0","Psychic1","Psychic2","Water0","Water1","Water2","ElectricSymbol","FightingSymbol","FireSymbol","GrassSymbol","NormalSymbol","PsychicSymbol","WaterSymbol","Pokecard","props","hg","evolvesFrom","moveInfo","move","symbolSrc","cost","Math","floor","random","type","name","pokemon","i","push","map","src","index","key","className","alt","generateMoveInfoElement","moves","sprites","other","species","onClick","handlePrev","id","stage","cardSrc","selectCard","replace","stats","slice","genera","genus","dm","foot","toFixed","round","convertHeight","height","weight","language","power","generateWeaknessElement","generateResistanceElement","list","obj","generateRetreatCostElement","POKEMON_API","Ball","useState","data","setData","isLoading","setIsLoading","getRandomId","min","max","ceil","resetPokemon","selectPokemon","a","timeout","fetch","pokemonRes","json","length","url","movesRes","types","typeRes","speciesRes","prevSpeciesRes","prevSpecies","prevPokemonRes","prevPokemon","evolves_from_species","setTimeout","logo","pokeball","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3238bf5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.2b4798f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.39f8ae63.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragon_0.2de64a23.png\";","module.exports = __webpack_public_path__ + \"static/media/dragon_1.3de1e62f.png\";","module.exports = __webpack_public_path__ + \"static/media/dragon_2.72aae9b0.png\";","module.exports = __webpack_public_path__ + \"static/media/electric_0.99429d7c.png\";","module.exports = __webpack_public_path__ + \"static/media/electric_1.36507737.png\";","module.exports = __webpack_public_path__ + \"static/media/electric_2.4b3bc754.png\";","module.exports = __webpack_public_path__ + \"static/media/fighting_0.6e76f284.png\";","module.exports = __webpack_public_path__ + \"static/media/fighting_1.a0f7fc41.png\";","module.exports = __webpack_public_path__ + \"static/media/fighting_2.0069788b.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_0.bfc27655.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_1.974f182d.png\";","module.exports = __webpack_public_path__ + \"static/media/fire_2.8ec240f1.png\";","module.exports = __webpack_public_path__ + \"static/media/grass_0.90135cfe.png\";","module.exports = __webpack_public_path__ + \"static/media/grass_1.27d05f15.png\";","module.exports = __webpack_public_path__ + \"static/media/grass_2.10f4df66.png\";","module.exports = __webpack_public_path__ + \"static/media/normal_0.1d9e2ef7.png\";","module.exports = __webpack_public_path__ + \"static/media/normal_1.a9d0f9d6.png\";","module.exports = __webpack_public_path__ + \"static/media/normal_2.8394f705.png\";","module.exports = __webpack_public_path__ + \"static/media/psychic_0.5a87b50b.png\";","module.exports = __webpack_public_path__ + \"static/media/psychic_1.7c0feb74.png\";","module.exports = __webpack_public_path__ + \"static/media/psychic_2.af5e9fca.png\";","module.exports = __webpack_public_path__ + \"static/media/water_0.0cfc0b91.png\";","module.exports = __webpack_public_path__ + \"static/media/water_1.c972a599.png\";","module.exports = __webpack_public_path__ + \"static/media/water_2.3c988f6d.png\";","module.exports = __webpack_public_path__ + \"static/media/electric.7eee378c.png\";","module.exports = __webpack_public_path__ + \"static/media/fighting.37fe67f5.png\";","module.exports = __webpack_public_path__ + \"static/media/fire.52953182.png\";","module.exports = __webpack_public_path__ + \"static/media/grass.9e3a8dd0.png\";","module.exports = __webpack_public_path__ + \"static/media/normal.a1162492.png\";","module.exports = __webpack_public_path__ + \"static/media/psychic.33d9204b.png\";","module.exports = __webpack_public_path__ + \"static/media/water.1d3035bc.png\";","// card types\r\nexport const Dragon0 = require('./cards/dragon_0.png');\r\nexport const Dragon1 = require('./cards/dragon_1.png');\r\nexport const Dragon2 = require('./cards/dragon_2.png');\r\nexport const Electric0 = require('./cards/electric_0.png');\r\nexport const Electric1 = require('./cards/electric_1.png');\r\nexport const Electric2 = require('./cards/electric_2.png');\r\nexport const Fighting0 = require('./cards/fighting_0.png');\r\nexport const Fighting1 = require('./cards/fighting_1.png');\r\nexport const Fighting2 = require('./cards/fighting_2.png');\r\nexport const Fire0 = require('./cards/fire_0.png');\r\nexport const Fire1 = require('./cards/fire_1.png');\r\nexport const Fire2 = require('./cards/fire_2.png');\r\nexport const Grass0 = require('./cards/grass_0.png');\r\nexport const Grass1 = require('./cards/grass_1.png');\r\nexport const Grass2 = require('./cards/grass_2.png');\r\nexport const Normal0 = require('./cards/normal_0.png');\r\nexport const Normal1 = require('./cards/normal_1.png');\r\nexport const Normal2 = require('./cards/normal_2.png');\r\nexport const Psychic0 = require('./cards/psychic_0.png');\r\nexport const Psychic1 = require('./cards/psychic_1.png');\r\nexport const Psychic2 = require('./cards/psychic_2.png');\r\nexport const Water0 = require('./cards/water_0.png');\r\nexport const Water1 = require('./cards/water_1.png');\r\nexport const Water2 = require('./cards/water_2.png');\r\n\r\n// symbols\r\nexport const ElectricSymbol = require('./symbols/electric.png');\r\nexport const FightingSymbol = require('./symbols/fighting.png');\r\nexport const FireSymbol = require('./symbols/fire.png');\r\nexport const GrassSymbol = require('./symbols/grass.png');\r\nexport const NormalSymbol = require('./symbols/normal.png');\r\nexport const PsychicSymbol = require('./symbols/psychic.png');\r\nexport const WaterSymbol = require('./symbols/water.png');\r\n","import React from 'react';\r\nimport { Dragon0, Dragon1, Dragon2, Electric0, Electric1, Electric2, Fighting0, Fighting1, Fighting2, Fire0, Fire1, Fire2, Grass0, Grass1, Grass2, Normal0, Normal1, Normal2, Psychic0, Psychic1, Psychic2, Water0, Water1, Water2, ElectricSymbol, FightingSymbol, FireSymbol, GrassSymbol, NormalSymbol, PsychicSymbol, WaterSymbol } from '../assets';\r\nconst useMetricSystem = true;\r\n\r\nconst Pokecard = (props) => {\r\n\r\n\t// TODO: find easier solution\r\n\tconst selectCard = (type, stage) => {\r\n\t\tlet cardSrc;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"dragon\":\r\n\t\t\t\tswitch (stage) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcardSrc = Dragon0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcardSrc = Dragon1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcardSrc = Dragon2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcardSrc = Dragon0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"electric\":\r\n\t\t\t\tswitch (stage) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcardSrc = Electric0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcardSrc = Electric1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcardSrc = Electric2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcardSrc = Electric0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fighting\":\r\n\t\t\t\tswitch (stage) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcardSrc = Fighting0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcardSrc = Fighting1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcardSrc = Fighting2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcardSrc = Fighting0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fire\":\r\n\t\t\t\tswitch (stage) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcardSrc = Fire0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcardSrc = Fire1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcardSrc = Fire2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcardSrc = Fire0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"grass\":\r\n\t\t\t\tswitch (stage) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcardSrc = Grass0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcardSrc = Grass1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcardSrc = Grass2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcardSrc = Grass0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"normal\":\r\n\t\t\t\tswitch (stage) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcardSrc = Normal0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcardSrc = Normal1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcardSrc = Normal2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcardSrc = Normal0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"psychic\":\r\n\t\t\t\tswitch (stage) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcardSrc = Psychic0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcardSrc = Psychic1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcardSrc = Psychic2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcardSrc = Psychic0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"water\":\r\n\t\t\t\tswitch (stage) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcardSrc = Water0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcardSrc = Water1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcardSrc = Water2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcardSrc = Water0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tswitch (stage) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcardSrc = Normal0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcardSrc = Normal1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcardSrc = Normal2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcardSrc = Normal0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn cardSrc;\r\n\t}\r\n\r\n\tconst convertWeight = (hg) => {\r\n\t\treturn useMetricSystem ? `${(hg*0.1).toFixed(1)} kg.` : `${(0.2204622622*hg).toFixed(1)} lbs.`;\r\n\t}\r\n\r\n\tconst convertHeight = (dm) => {\r\n\t\tlet foot = (dm*0.3280839895).toFixed(2);\r\n\t\tlet inches = ('0' + (Math.round((foot%1)*12))).slice(-2);\r\n\t\treturn useMetricSystem ? `${(dm*0.1).toFixed(1)} m.` : `${Math.floor(foot)}'${inches}\"`;\r\n\t}\r\n\r\n\tconst findStage = (evolvesFrom) => {\r\n\t\tif (evolvesFrom === null || (evolvesFrom && evolvesFrom[\"is_baby\"])) {\r\n\t\t\treturn 0;\r\n\t\t} else if (!evolvesFrom[\"evolves_from_species\"]) {\r\n\t\t\treturn 1;\r\n\t\t} else {\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t}\r\n\r\n\t// default normal and random cost\r\n\tconst generateMoveInfoElement = (move) => {\r\n\t\tlet moveInfo = [];\r\n\t\tlet cost = Math.floor(Math.random() * 4) + 1;\r\n\t\tlet symbolSrc;\r\n\t\tif (move.type.name === props.pokemon.type.name) {\r\n\t\t\tswitch (move.type.name) {\r\n\t\t\t\tcase 'electric':\r\n\t\t\t\t\tsymbolSrc = ElectricSymbol;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fighting':\r\n\t\t\t\t\tsymbolSrc = FightingSymbol;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fire':\r\n\t\t\t\t\tsymbolSrc = FireSymbol;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'grass':\r\n\t\t\t\t\tsymbolSrc = GrassSymbol;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'psychic':\r\n\t\t\t\t\tsymbolSrc = PsychicSymbol;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'water':\r\n\t\t\t\t\tsymbolSrc = WaterSymbol;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tsymbolSrc = NormalSymbol;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsymbolSrc = NormalSymbol;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < cost; i++) {\r\n\t\t\tmoveInfo.push(symbolSrc)\r\n\t\t}\r\n\r\n\t\treturn moveInfo.map((src, index) =>\r\n\t\t\t<img src={src} key={index} className=\"attack-style no-drag\" alt=\"Element Symbol\"></img>\r\n\t\t);\r\n\t}\r\n\r\n\t// reuse switch code\r\n\tconst generateResistanceElement = () => {\r\n\t\tlet symbolSrc;\r\n\t\tconst resistanceType = props.pokemon.type[\"damage_relations\"][\"half_damage_from\"][0] ? props.pokemon.type[\"damage_relations\"][\"half_damage_from\"][0].name : null;\r\n\t\tswitch (resistanceType) {\r\n\t\t\tcase 'electric':\r\n\t\t\t\tsymbolSrc = ElectricSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'fighting':\r\n\t\t\t\tsymbolSrc = FightingSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'fire':\r\n\t\t\t\tsymbolSrc = FireSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'grass':\r\n\t\t\t\tsymbolSrc = GrassSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'psychic':\r\n\t\t\t\tsymbolSrc = PsychicSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'water':\r\n\t\t\t\tsymbolSrc = WaterSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'normal':\r\n\t\t\t\tsymbolSrc = NormalSymbol;\r\n\t\t\t\tbreak;\r\n\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tsymbolSrc = null;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (symbolSrc) {\r\n\t\t\treturn (\r\n\t\t\t\t<div id=\"pokemon-resistance-container\">\r\n\t\t\t\t\t<img src={symbolSrc} className=\"dmg-modifier no-drag\" alt=\"Element Symbol\"></img>\r\n\t\t\t\t\t<div className=\"dmg-modifier-text\">-20</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t// TODO: reuse switch code\r\n\tconst generateWeaknessElement = () => {\r\n\t\tlet symbolSrc;\r\n\t\tconst weaknessType = props.pokemon.type[\"damage_relations\"][\"double_damage_from\"][0] ? props.pokemon.type[\"damage_relations\"][\"double_damage_from\"][0].name : null;\r\n\t\tswitch (weaknessType) {\r\n\t\t\tcase 'electric':\r\n\t\t\t\tsymbolSrc = ElectricSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'fighting':\r\n\t\t\t\tsymbolSrc = FightingSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'fire':\r\n\t\t\t\tsymbolSrc = FireSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'grass':\r\n\t\t\t\tsymbolSrc = GrassSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'psychic':\r\n\t\t\t\tsymbolSrc = PsychicSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'water':\r\n\t\t\t\tsymbolSrc = WaterSymbol;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'normal':\r\n\t\t\t\tsymbolSrc = NormalSymbol;\r\n\t\t\t\tbreak;\r\n\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tsymbolSrc = null;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (symbolSrc) {\r\n\t\t\treturn (\r\n\t\t\t\t<div id=\"pokemon-weakness-container\">\r\n\t\t\t\t\t<img src={symbolSrc} className=\"dmg-modifier no-drag\" alt=\"Element Symbol\"></img>\r\n\t\t\t\t\t<div className=\"dmg-modifier-text\">x2</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t// TODO: do this smarter wtf\r\n\tconst generateRetreatCostElement = () => {\r\n\t\tlet list = [];\r\n\t\tlet cost = Math.floor(Math.random() * 4) + 1;\r\n\t\tfor (let i = 0; i < cost; i++) {\r\n\t\t\tlist.push(i);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div id=\"pokemon-retreat-container\">\r\n\t\t\t\t{list.map((obj) => \r\n\t\t\t\t\t<img src={NormalSymbol} key={obj} className=\"dmg-modifier no-drag\" alt=\"Element Symbol\"></img>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// TODO: split up into more components\r\n\tconst moveInfo = generateMoveInfoElement(props.pokemon.moves[0]);\r\n\treturn moveInfo ? \r\n\t(\r\n\t\t<div className=\"card-container\">\r\n\t\t\t<img src={props.pokemon.sprites.other[\"official-artwork\"][\"front_default\"]} className=\"pokemon-img no-drag\" alt=\"Pokemon\" />\r\n\t\t\t{props.pokemon.species[\"evolves_from_species\"] && !props.pokemon.species[\"evolves_from_species\"][\"is_baby\"] ? <img src={props.pokemon.species[\"evolves_from_species\"].sprites[\"front_default\"]} className=\"prev-pokemon-img no-drag\" onClick={() => props.handlePrev(props.pokemon.species[\"evolves_from_species\"].id, 0)} alt=\"Previous Pokemon\" /> : null }\r\n\t\t\t<img src={selectCard(props.pokemon.type.name, findStage(props.pokemon.species[\"evolves_from_species\"]))} className=\"card-img no-drag\" alt=\"Pokecard\" />\r\n\t\t\t<div className=\"pokemon-info\">\r\n\t\t\t\t<p className=\"pokemon-header\">\r\n\t\t\t\t\t<span id=\"pokemon-name\">{props.pokemon.name.replace(\"-m\", \" ♂\").replace(\"-f\", \"♀\")}</span>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<p className=\"pokemon-hp-header\">\r\n\t\t\t\t\t<span id=\"pokemon-hp-text\">HP</span>\r\n\t\t\t\t\t<span id=\"pokemon-hp\">{props.pokemon.stats[0][\"base_stat\"]}</span>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<p className=\"pokemon-middle\">\r\n\t\t\t\t\t<span>{`NO. ${('00' + props.pokemon.id).slice(-3)}`}&nbsp;&nbsp;</span>\r\n\t\t\t\t\t<span>{props.pokemon.species.genera[7].genus}&nbsp;&nbsp;</span>\r\n\t\t\t\t\t<span>{`HT: ${convertHeight(props.pokemon.height)}`}&nbsp;&nbsp;</span>\r\n\t\t\t\t\t<span>{`WT: ${convertWeight(props.pokemon.weight)}`}</span>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<div id=\"pokemon-attack-container-1\">\r\n\t\t\t\t\t<div className=\"attack-style-container\">\r\n\t\t\t\t\t\t{moveInfo}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"attack-text-container\">\r\n\t\t\t\t\t\t<div className=\"attack-text\">{props.pokemon.moves[0].name.replace(\"-\", \" \")}</div>\r\n\t\t\t\t\t\t<div className=\"attack-details\">{props.pokemon.moves[0][\"flavor_text_entries\"][0].language.name === \"en\" ? props.pokemon.moves[0][\"flavor_text_entries\"][0][\"flavor_text\"] : null}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t<div className=\"attack-dmg\">{props.pokemon.moves[0].power}</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{generateWeaknessElement()}\r\n\t\t\t\t{generateResistanceElement()}\r\n\t\t\t\t{generateRetreatCostElement()}\r\n\r\n\t\t\t\t<p className=\"pokemon-bottom\">\r\n\t\t\t\t\t<span>{props.pokemon.species[\"flavor_text_entries\"][1][\"flavor_text\"].replace(\"\\n\", \" \").replace(\"\\f\", \" \")}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t) \r\n\t: \r\n\tnull;\r\n}\r\n\r\nexport default Pokecard;","import React from 'react';\r\nimport Pokecard from './Pokecard'\r\nimport pokeball from '../assets/pokeball.svg';\r\nimport logo from '../assets/logo.svg';\r\nimport { useState } from 'react';\r\n\r\n// TODO: create & move to config file\r\nconst POKEMON_API = 'https://pokeapi.co/api/v2/pokemon/';\r\nconst POKEMON_SPECIES_API = 'https://pokeapi.co/api/v2/pokemon-species/';\r\n\r\nconst Ball = () => {\r\n  const [data, setData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const getRandomId = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  // TODO: add multiple moves\r\n  const selectMoveSet = (moves) => {\r\n    let moveSet = [];\r\n    const moveId1 = getRandomId(0, moves.length-1);\r\n    //const moveId2 = this.getRandomId(0, moves.length-1);\r\n    moveSet.push(moves[moveId1]);\r\n    //moveSet.push(moves[moveId2]);\r\n    return moveSet;\r\n\t}\r\n\r\n  const resetPokemon = () => {\r\n    setData(null);\r\n  }\r\n\r\n  const selectPokemon = async (id, timeout = 0) => {\r\n    setIsLoading(true)\r\n\r\n    const pokemonRes = await fetch(POKEMON_API + id);\r\n    const pokemon = await pokemonRes.json();\r\n\r\n    const movesRes = await fetch(pokemon.moves[getRandomId(0, pokemon.moves.length)].move.url);\r\n    const moves = await movesRes.json();\r\n\r\n    const typeRes = await fetch(pokemon.types[0].type.url);\r\n    const type = await typeRes.json();\r\n    \r\n    const speciesRes = await fetch(POKEMON_SPECIES_API + id);\r\n    const species = await speciesRes.json();\r\n\r\n    if (species[\"evolves_from_species\"] && !species[\"evolves_from_species\"][\"is_baby\"]) { // not checking babies, gen 1 for now\r\n      const prevSpeciesRes = await fetch(species[\"evolves_from_species\"].url);\r\n      const prevSpecies = await prevSpeciesRes.json();\r\n      const prevPokemonRes = await fetch(POKEMON_API + prevSpecies.id);\r\n      const prevPokemon = await prevPokemonRes.json();\r\n      setData({ pokemon: {...pokemon, moves: [moves], type, species: {...species, evolves_from_species: prevPokemon} }})\r\n    } else {\r\n      setData({ pokemon: {...pokemon, moves: [moves], type, species }})\r\n    }\r\n\r\n    // let animation play\r\n    setTimeout(() => {\r\n      setIsLoading(false)\r\n    }, timeout);\r\n    \r\n  }\r\n\r\n  return isLoading ? \r\n  (\r\n    <div className=\"container\">\r\n      <img src={logo} className=\"pokemon-logo no-drag\" onClick={resetPokemon} alt=\"Pokemon Logo\" />\r\n      <img src={pokeball} className=\"ball-img anim no-drag\" alt=\"Pokeball\" />\r\n    </div>\r\n  ) \r\n  : \r\n  (\r\n    <div className=\"container\">\r\n      <img src={logo} className=\"pokemon-logo no-drag\" onClick={resetPokemon} alt=\"Pokemon Logo\" />\r\n      {data ? <Pokecard pokemon={data.pokemon} handlePrev={selectPokemon}/> : <img src={pokeball} className=\"ball-img no-drag\" onClick={() => selectPokemon(getRandomId(1, 151), 1000)} alt=\"Pokeball\" />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ball;","import React from 'react';\r\nimport Ball from './components/Ball'\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <Ball/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}